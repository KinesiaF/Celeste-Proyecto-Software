<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAALAAAACFCAYAAAD7AHJAAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAF4ZJREFUeF7tXWmQFMW2ZpaetWef6QHZF0EBAYWriCKyiWyyioogiAMoCIqigICs
        CoKsOqLscLkIrihedy/rQ0X0Ph8KIWKEIYIKARphKChCPr6azOrq9jB0d2XW0lNfxPeDYDpP1Tnf9FRl
        nqUS8+DBxfAE7MHV8AQcBX777Td28OBBtn37drZx40a2YMEC9tBDD7EBAwawdu3asUsuuYRlZ2ez2rVr
        s2uuuYb17duXjR49ms2ePZutWbOGvffee+zLL79kJ06c4Ct6MAtPwOfB3r172axZs1iHDh1Yo0aNWF5e
        HqtUqZI0ZmRksHr16rHrrruOPfjgg2zLli3csodo4AnYgB07drBx48ZpgqVEd14mJbOkwouY7+KmLO3K
        jizl0n+wpMo1WUJaBv3z52FxcTEbMmQIe+WVV9iff/7Jr8pDeajQAj579ix7/fXX2bBhw1jVqlVJUSVm
        ZjNf3SYsrUV7ltHxNubvN5rlDJ/J8sY9xwpnv8oCz+1klZ/ff14Wr9jNCuf9m+VPWsVyRj7BsvqPZZmd
        72BpV3dmKZc0Z0nFNUi7KSkprHfv3mzlypXs6NGj/Io9hKPCCfjXX39la9euZf369dP+jFPiSQpUYxmd
        BrC8CctJUcpmweMvM3/fUdovCnU9YNu2bdm8efPYV199xe/EA1ChBPzkk0+ygoICUiC+2g2Zv88IVjBz
        Iykyq1i06F2WPXgiS21yDXmd4L333ssOHz7M76pio0IIeNWqVax+/fp/E0JKo5Ysa+B4VrTgbVJMdjOw
        /GOWM+IJltayM0tITQ+5dp/Px6ZMmcJOnTrF77JiIq4FvHnzZnb11VeHBD7Rn8uyBow79+z6P6RoHMv1
        +1jumMXMV6dxyP1UqVKFLV68mN9xxUNcCnjXrl2se/fuIYEGM3sOZ8WrPqUF4iJmD53OkopCXzobN27M
        1q9fzz1QcRBXAj5w4AAbPHhwSGDBjPb9WNFTH5BicDOzbn2AJaRnhtxrmzZt2DvvvMM9Ev+IGwHjMMAY
        SDDtyhvOveG/RAY/XhhY9hHL7Hrn3+69T58+7Pvvv+feiV+4XsDHjx9nXbp0CQkeDhKs2gJzCvEimt6m
        V4gfatasybZt28Y9FZ9wtYA/+eQTLf9ABAynX7mjniQDXFFYMP15lnrF9SFCxi5MvMK1At6wYYN2WiWC
        lNrk2gueilUkZnYNfReYNGkS91x8wZUCfvzxx0OCgyNeKogVndlDHg3xU//+/dlff/3FvRgfcJ2AS0pK
        QoKSNeBhMngey5g3filLzM7X/dWyZUtttyZe4BoBHzp0SMsHEIFAplfuA0+RQfMYSrzg+eoF8ywCgQB7
        ++23uWfdDVcIGG/SeKMWAUiu0UDLBKOC5fE8/NcXLO2abroPwdLSUu5h98LxAv7444+1c3/hdKQ1xsNp
        ml3097onRMRPP/0097Q74WgBHzt2jDVo0EB3NjbsqaB4jI45wx8LEfGbb77JPe4+OFrAnTt31p3s7TTI
        Zc7dwZ2cwsJC1+YZO1bAI0eO1B2c2rQ1GQSP5ujvHXycuOqqq9jp06e5990DRwp4/vz5umNxuuaG1Mfi
        lZ+wwnlvsvzJa7QSosCK3eTPOY3GF7vbbruNR8A9cJyAN23apDu0UmISK5hhb4WEkUWlW1j2nZO1cqO0
        qzqxlAZlNW0JqWnBazYwwZeqpT1qxZ6oqetwK/P3vZcVPrGJXN8Wrv9Suz5xzRMnTuSRcAccJWCUsqOv
        gnBm7r1zaadbSNSrZd3+0LkgN9OvSwaTKtdgmd3v0oo9KbtWEvvEidnBUisUkroFjhEwmoY0axYUCap/
        KWdbQZxeZXYbwnw1g4lCKpmUX8zS2/a1NREpb8KykGvaunUrj4yz4RgBI39VOC/9+t6kk1Uz/9F/srSW
        N4YE0mr66l9um5CNuRM1atRg3333HY+Oc+EIAaNcXDgu5dIWpHNVEs+k+AYU1+AEpja7Tus9QV2vShqT
        43v16sUj5FzYLmD0aRCl7on+HFb01H9Ix6ogyozwqICXLRE0pzGtVVdWMG09ef2qmHruhVPYf+utt3ik
        nAnbBfzII4/ozrIysyy7ZBpLzKF7RDiReOGj7kMF0RtD2G3dujWPlDNhq4C//fZb3VHJVWqRzlTB8GRv
        tzC1eTstKYe6J9lMvz74TrJu3ToeMefBVgGjJ5lwEo42KUfKJp4thU03Er/oODCh7k0mixa+o9ts2LAh
        j5jzYJuA9+zZozsIe6yUE2USTfaSAtV1m26nFS94eGwR9hYuXMgj5yzYJmDjtlneQ0tIB8oiDiOELVVM
        SPax1MvbsMweQ1n6tTexZAv2kLMHPULeryziODwhI0uzhdavJ0+e5NFzDmwRMBpviCCkXtGWdJ4sFpVu
        1W2pIo6H0Z/BaBc5yzg6pn5eJlU/eqEdrLA1efJkHkHnwBYBo3uMcArKwCnHSeG6L7RvRmFLBSFe0jZn
        SsMryc/JZIHi6hTRwzg5OdlxzVIsFzD6dwnHoxEH5TBZTLkstLGfbCZXq0faNTJvbCn5WdkMLNlO2pfB
        nGEzdTsjRozgkXQGLBcwmtAJZ6hsa4pnUWFHFdPb9iFtG4lU0IR0P/l5mUxpcIWWWUZdgwwam2/v27eP
        R9N+WCpg486DyvKgrDsm6HZUEt9MlP1w4jEivAmfCkbyCxUr8x58WrczZ84cHlH7YamAp06dqjsh/9G1
        pKPMEokwwoYqYr5F/iMrSfvnI76Js0umltt5XQbRQpayL4PiLwneYZwCSwXcokULzQGJuYWkg8yyeO3/
        aiX3xoDKJJLSCx57kbQdDQtmvqD05U5V7oSxeuPIkSM8qvbCMgFjQKC4eWR+UQ4ySySeCxuyiccSyqYZ
        YloRZcsskQBE2TNLFBgIG8uWLeORtReWCRgnOeLm8TxFOcgMA8/u1Ga1CRsymXvfAtKmDOY9/Cxp0yxV
        nNSh7k+s36NHDx5Ze2GZgDt27KjdOFIXsT9LOcgMwxt2yKJK8QpiL5mybYbI+aBsmaXIJcGesBNO5iwR
        MJpQC8eiazrlGDNEcksiP/KUyYxzf+Ipeyqo4q+HisoOY9XGiy++yCNsHywRMAZdi5tWcfSZ0el2fX1Z
        RJFj0aL3SHsqiPwJ6jrMEOVJlC0zRBGAWB/zSOyGJQK++eab9ZsOLN1FOiZWGtP+ZDKzyyDSniriUYW6
        DrNUUdktKrTR0cduKBfwmTNnWHp62ZC+lMYtSYeYYXgTZ1lEBhtljyKy6ZCUhB4QCb4ULXcAc5BzR80j
        f56iqsOX9Ot6kPbM0N/vPn39999/n0faHigX8GuvvabfrIqtKGP9lixij5ayRfFCv0BprbpE1MhEVaK9
        ij13tLYV699///080vZAuYAffTQYYNm5D8Ur9ygpyERpPWUvnEWL3yc/H87EvADLHT2fXANUsQthpIp8
        6+SL6mhrYxKqnVAuYONIANnbZ6qOjSPthGns8BgJIdTi1f8NWQOPGdTPyiQGPRptymBKo6u0tWvVqsUj
        bQ+UC7hr167ajaICmHKEGeLEyRgoWbxQjq9g/sRV5OfLo6/WpdpzKX5JkI5J/YxsYouOun4zTL+2bJQv
        JkXZCeUCvvzyy7UbRZsmyhFmqGLvF4wmT9mYZuhkyp5Yin4aYu2jR4/yaFsP5QJGLRVuUvbJENqYCgfK
        ZjQvcVaVDpllpH9VImXWwPH62p9//jmPtvVQKmDMJBM3KTtXVeWzI7bDKJvlEW/m2YMnam1XjZ0encKM
        9reQ1x0r8VIq1raze49SAaM5nLhJdAOnHBErjd8AKmgmJbF4zX+1ZBpkmyVXq0uubzW1pijEtcZKNEIU
        a69YsYJH3HooFfBHH32k32T2XVNIR8RKY88CFUy7siNpNxbicSezxzDmq92ItGUFfXUvI68tVhYtCJ6A
        zpw5k0fceigV8KuvBje8ZadQpreWnzsQThXHsOg4j8MNyp5KJhVUJq8nVhav/kxf285CT6UCxiA9cZOo
        QqAcEStVVxyD2KwvmL6BtG+WeIZPrn4xaVcJk5LI6zBDsQtkZxtWpQLGvAXhQDQYoZwQK63aQ8VJX87I
        OeQ1mCUSm5AfQtlVQdnDcsTzPSYc2QWlAh4yJLhXKLvkO9Gfq69tBbENpaoNgOqjZMHCOa+R9mOl+CtY
        vXp1HnHroVTAN91U9pwKsVEOMEPVHXco4tsYbUdxAkddkxlm3NCftCmTsos9UZ2NdTMyMnjErYdSAd99
        992681AxTDkhViYVVtHXtoN4fsXeKh4vwvuixcKip7ewxMzghCYVLFr0Lmk7VmIcBNatW7cuj7j1UCrg
        adOmGZwnt7rBaUe4vnpNtEcBjM2Kdchhxo0DybVlMTyRyCwxKgzr2tnFXamAUXotnJc/9V+kE2IlNubF
        2k6kNm0oyoJQbLFRa8kgmpJQNs1QDHi85ZZbeMSth1IBv/HGG7oDZVf3IkVQrO1kRjsyTNXWmuwRDoHl
        H+tr25nUrlTAn30W3OyW3YzZ32eEvrbTGU0fOFU7ErLHlxXODX452dkrTamAf/zxR/0mM28qIR0RK1XV
        woUTm/UyjoARcOo+wqlKwGktO5P2YiV6w4m17RwCo1TAABpg4CZlFxfmjlmsO1AFcQqXazj+Rlca/DvW
        A5RIO1mqEjBeECl7sTLnntn62h988AGPtvVQLmBscuMmselNOSJWFs7drDtQNssbOhNYskNLDaU+Vx4j
        fQdQlaSEKfuUvViZdduD+tr79+/n0bYeygWMY0bcJI4dKUeYYfJFtXUnymQkYssZNiOqvN+i0i3kOuFE
        B0zq82YZqf1Iadzy++WXX3i0rYdyAffs2VO7SWzSU44wQ6QoCifKYjRv64VzXo9oOy+aosrkqvLzh1WM
        MRND0f1+P4+0PVAuYKTaCUfK3kjPn7JOX1sWUaxI2SqPWbfcT64FonaM+gxF+KdSYhK5jhmi7Sxlzwwx
        0gBr169fn0faHigXMJKdhSMxg5dyhhnKPlKOtfQJCd4oKUJBaGqTa7Vv3Wib6xXMeoW8JrOMpstQpBRz
        pu3u1q5cwDt27NAdKbusCER5ulhfBiOZPKSKKh6JVFSD509ara8/ffp0Hml7oFzAQNWqVcucWetS0iFm
        mDtmke5MWVSRbXYhoig0IaXsaFYmo3mEiZQ4mBHrf/rppzzK9sASAQ8fPly/4cL5b5FOiZU40kzKLyvd
        l0WkTFK2VBKPHtS1mGXe+KWkPTMUuz92P/8Clgh48+bgni2qiSmnmGHWrQ/o68siDhQoWyqYNyGY9CST
        kfZ4i4aYCirWHzNmDI+wfbBEwGfPnmWZmWVz0lIayW+xiuYiKkqMrHiUQJaeqin6KH2nbJqhv99ofX07
        T+AELBEwgJQ7ceOya7NAlO2L9WVSRUtYwdz75it57gVVTYLyXdxUW7+oqIhH1l5YJuC1a9fqzs0Z/hjp
        HLNEDq6wIZNoXi27RWnWgHGkLRlE6VMkPYmjpbGd7J133skjay8sE/CJEyf0m5fZNMRI1VM6IeScEU+Q
        tiMlhJvSoDm5viyq2HkAkU8hbLz00ks8svbCMgEDN9xwg3bzaMNfed1e0klmqarTuZH4s48XpILpz5PX
        EM6ip/6j7Vfjvqn1ZBIHDBjEQl2HWaY2ba3Z8Pl87NSpUzyq9sJSAS9eHEyBzH3gKdJJZolGJKraroYz
        0m86lZ00w5ldMo28BrMsXrFbt4H8FqfAUgF/8803uhNQkk05Sgaj7ZweKzG4m7IfTquS7zO7Dibty2D2
        4Em6neXLl/OI2g9LBQzceGNZFhOICl7KWTKY2WOobkcVI+06b0X/YFWTOTWee9xLzC3S7GRlZWnvM06B
        5QLevn277nQVY7eMVJVba+SF/mRre9Q1LyE/K4vYR6Zsy6KxSmTWrFk8ks6A5QIGBgwYoDtEdrVyOMU0
        HVVEvRxlV9CKb188n1K2ZTCwZLveBcnugS4UbBHwvn37dOeryJYKp7ClisnV67O8saVaY2vY0xpcn/s3
        RhVQPy+TKlIljTSO8V26dCmPoHNgi4CB++4LTnvESw7lPJkUbZBUEt9UEK0VfdtgQ3bHz3Ci4kTYa968
        OY+cs2CbgH/66Sd9BK3WfFly90qK/l736AFxM7UCWckz9ygax5i9/PLLPHLOgm0CBmbMmKE7CEkilBNl
        E8fYwqYbid0V6r5k07h3jQMop8JWAWOKUbVq1TQn4XQr8NxO0pmyiQEsYlvITVSZWBRO7HELu1u3buUR
        cx5sFTDwzDPP6I7CVB/KmSqIlx8rjp1lMLlGg6jr68zQWOXSv39/HilnwnYBA82aNdMdhpZFlFNVEcJQ
        lcVmlhgRi4pi2b2VyyO25Iy51Xv37uVRciYcIeCNG4NtRRNzC6U3Yo6EyCe2au7GhYhcDrxwBp615pHK
        SGTciesYNWoUj5Bz4QgBAxMmTNAdh54DlHNVE6dmKE+SXWMXDbHvWjjvTfL6VBOPcOI6OnTowCPjbDhG
        wEC/fsGev5gDRznZCmJkAMZgodAyMS+gX5MKIvk8tUV7bS+8aOE75PVYQfS0ENdUp04dduTIER4VZ8NR
        Av7jjz9YixbBAwcrCyvLY96E5do3Y1KgbMfELPGIgD1WPH8Xr9xD2rSS2JUxXt/OnTt5RJwPRwkYwDFz
        fn6+7kyzFRCyiVFVaO2K6gR/r7u1Tj7YzUDPC7E1h+d4HJEjARzf4ti7xRYYvtWxv0qtaxcL5/2bJfpz
        dH+vWbOGR8IdcJyAAeNoAlD2fA2PZSz+5/9pM5SFn6dMmcIj4B44UsCAsXoD6YLoy0sFwWPsFHPewIED
        B3LPuwuOFTBgTPhJuawVGQSPsTGzZ7BbUqtWrbjH3QdHCxjo3r17iIjt2BuNN2Z2GaT7tHLlyuzgwYPc
        2+6D4wX8888/s8aNG+sOTyquIX1kakUh5nxgy074Enz33Xe5p90JxwsYgIi7desWdHxCAssZ6azdCacT
        Pc2MM+hq166ttb51O1whYAHjMzHo7zuKDJbHUCI5R0zVBNu3b88OHz7MvepuuErAwKJFof2AZY/vijdm
        9R8b4q+hQ4dyT8YHXCdgAPvEeXl5elDQqkn2MPF4YHhB6ezZs7kH4weuFDCAEzvUaYngIGfB6lRMpxI7
        NdixEb5JS0tjL7zwAvdcfMG1AgbQn8uYAASiO01g6S4ysBWBSMoxVps0bNiQ7dmzh3ss/uBqAQuMHz8+
        RMQJqena6KvK6/eRQY5HIjEofNI99tCxgxPPiAsBAxs2bGBNmjQJCSAqGrJLppIBjxciUy7l0n+E3Dfa
        Pzmtg44qxI2ABUpLS/WpSIK+2g1Z7v0LSQG4lQWPv6T1WTbeJzh27Fh2/Phx7o34R9wJGDh9+jSbNm2a
        9vJiDC5ebJyWzhgt0SU9o93NIfcFDh48mB04cIB7oOIgLgUs8MMPP7DRo4NDSQTTWnXRWj9Z0UxFFnF8
        Tg1CxHPuhx9+yO+44iGuBSzwxRdfsNtvD/b4EhSd1nPumcUCyz4khWMnUSmBzu7oXBR+7cggw/iyio4K
        IWCBbdu2sU6dOv1NDIJo2ZR9xwTbatNQ0p4zco5WbpSQXjaWLJwYLrh69Wp+Rx4qlIAFvv76a7ZgwQIt
        J4ASCeir01irySt47EVWvPZzUnAyiHkWKE8S8ycoNm3alE2cOJHt2rWL34EHgQopYCOOHTvGVq1axfr2
        7fu3lz4jE7PytA45Wp3b9b21ejhUEmPWR8GMjdogF2PDPZyGYfo8HgNyhs1g/ptHa0e7qc3baWU8Wul+
        QiJpC8QU+Llz57L9+/fzK/VAocIL2AjsXmzatImVlJRoid6UsC5EjB2olJRM/l95TE5O1oanLFu2THv5
        9BAZPAGXAzS1mzp1Khs2bJj2to/ciypVqpACjJSouEaCPjo+Dho0SGvogplrJ0+e5FY9RANPwDHgzJkz
        7NChQ2z37t3aN/aSJUvY5MmT2V133cW6dOmijVB4+OGH2cKFC7W2WUgcx4Sm33//na/gQRY8AXtwNTwB
        e3A1PAF7cDU8AXtwNTwBe3A1PAF7cDU8AXtwNTwBe3AxGPt/No8FiamzPK8AAAAASUVORK5CYII=
</value>
  </data>
</root>